@page
@model Assignment1Attempt4.Areas.Identity.Pages.AssignmentPages.StudentDetailsModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_StudentLayout.cshtml";
    var firstName = HttpContext.Session.GetString("CurrentFName");
    var lastName = HttpContext.Session.GetString("CurrentLName");
}

<h1>Details</h1>

<div>
    <h4>Assignments</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignments.AssignmentName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignments.AssignmentName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignments.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignments.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignments.MaxPoints)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignments.MaxPoints)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignments.DueDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignments.DueDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignments.AssignmentType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignments.AssignmentType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignments.ClassesID)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignments.ClassesID)
        </dd>
    </dl>
</div>
<div>
    <a asp-page="/AssignmentUpload/AssignmentUpload"
       asp-route-assignmentName="@Model.Assignments.AssignmentName"
       asp-route-description="@Model.Assignments.Description"
       asp-route-maxPoints="@Model.Assignments.MaxPoints"
       asp-route-dueDate="@Model.Assignments.DueDate"
       asp-route-assignmentType="@Model.Assignments.AssignmentType"
       asp-route-classesID="@Model.Assignments.ClassesID">Upload Assignment</a>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Assignments?.ID">Edit</a> |
    <a asp-page="./StudentClassPage" asp-route-id="@Model.Assignments.ClassesID">Go back to Class Page</a>
</div>

<!--BEGINNING OF ZACKS ADDITIONS-->


<div id="gradePieChart" style="width: 800px; height: 600px; position: absolute; top: -5%; right: 1%;"></div>

@{
    var firstName1 = HttpContext.Session.GetString("CurrentFName");
    var lastName1 = HttpContext.Session.GetString("CurrentLName");

    var studentSubmission = Model.StudentSubmissions.FirstOrDefault(sub => sub.Fname == firstName1 && sub.Lname == lastName1);

    double maxPoints1 = Model.Assignments.MaxPoints;
    double studentGrade1 = studentSubmission != null ? studentSubmission.StudentGrade : 0;
    double percentage1 = (studentGrade1 / maxPoints1) * 100;
    string letterGrade1 = "";
    int offsetInt;

    if (percentage1 >= 94.00)
    {
        letterGrade1 = "A";
        offsetInt = 0;
    }
    else if (percentage1 >= 90.00)
    {
        letterGrade1 = "A-";
        offsetInt = 1;
    }
    else if (percentage1 >= 87.00)
    {
        letterGrade1 = "B+";
        offsetInt = 2;
    }
    else if (percentage1 >= 84.00)
    {
        letterGrade1 = "B";
        offsetInt = 3;
    }
    else if (percentage1 >= 80.00)
    {
        letterGrade1 = "B-";
        offsetInt = 4;
    }
    else if (percentage1 >= 77.00)
    {
        letterGrade1 = "C+";
        offsetInt = 5;
    }
    else if (percentage1 >= 74.00)
    {
        letterGrade1 = "C";
        offsetInt = 6;
    }
    else if (percentage1 >= 70.00)
    {
        letterGrade1 = "C-";
        offsetInt = 7;
    }
    else if (percentage1 >= 67.00)
    {
        letterGrade1 = "D+";
        offsetInt = 8;
    }
    else if (percentage1 >= 64.00)
    {
        letterGrade1 = "D";
        offsetInt = 9;
    }
    else if (percentage1 >= 60.00)
    {
        letterGrade1 = "D-";
        offsetInt = 10;
    }
    else
    {
        letterGrade1 = "E";
        offsetInt = 11;
    }
}

<div id="studentInfoContainer" style="position: absolute; top: 65%; right: 20%;">
    @if (studentSubmission != null)
    {
        <h4>Student Grade Information</h4>
        <div>
            <p>Name: @studentSubmission.Fname @studentSubmission.Lname</p>
            <p>Grade: @studentSubmission.StudentGrade out of @maxPoints1</p>
            <p>Percentage: @percentage1.ToString("F2")%</p>
            <h4>Letter Grade</h4>
            <p>Grade: @letterGrade1</p>
        </div>
    }
    else
    {
        <p>No submission found for @firstName1 @lastName1</p>
    }
</div>


<!--IT IS A WARZONE AFTER THIS COMMENT-->


<!--
<div>
   <h4>Student Submissions</h4>
    <hr />

<table class="table">
        <thead>
            <tr>
                <th>Student Name</th>
                <th>Student Grade</th>
                <th>Percentage</th>
                <th>Grade Category</th>
            </tr>
        </thead>
        <tbody>

-->
<!--
@{
    int countA = 0;
    int countAMinus = 0;
    int countBPlus = 0;
    int countB = 0;
    int countBMinus = 0;
    int countCPlus = 0;
    int countC = 0;
    int countCMinus = 0;
    int countDPlus = 0;
    int countD = 0;
    int countDMinus = 0;
    int countE = 0;
}

@foreach (var submission in Model.StudentSubmissions)
{

                    <tr>
                        <td>@submission.Fname @submission.Lname</td>
                        <td>@submission.StudentGrade</td>
                        <td>
            @{
                double maxPoints = Model.Assignments.MaxPoints;
                double studentGrade = submission.StudentGrade;
                double percentage = (studentGrade / maxPoints) * 100;
            }
            @percentage.ToString("F2")%
                        </td>
                        <td>

            @{
                switch (percentage)
                {
                    case var p when p >= 94.00:
                        <text>A</text>
                        countA++;
                        break;
                    case var p when p >= 90.00:
                        <text>A-</text>
                        countAMinus++;
                        break;
                    case var p when p >= 87.00:
                        <text>B+</text>
                        countBPlus++;
                        break;
                    case var p when p >= 84.00:
                        <text>B</text>
                        countB++;
                        break;
                    case var p when p >= 80.00:
                        <text>B-</text>
                        countBMinus++;
                        break;
                    case var p when p >= 77.00:
                        <text>C+</text>
                        countCPlus++;
                        break;
                    case var p when p >= 74.00:
                        <text>C</text>
                        countC++;
                        break;
                    case var p when p >= 70.00:
                        <text>C-</text>
                        countCMinus++;
                        break;
                    case var p when p >= 67.00:
                        <text>D+</text>
                        countDPlus++;
                        break;
                    case var p when p >= 64.00:
                        <text>D</text>
                        countD++;
                        break;
                    case var p when p >= 60.00:
                        <text>D-</text>
                        countDMinus++;
                        break;
                    default:
                        <text>E</text>
                        countE++;
                        break;
                }
            }
                        </td>
                    </tr>
}
        </tbody>
    </table>
</div>

<div>
    <h4>Grade Counts</h4>
    <p>A: @countA</p>
    <p>A-: @countAMinus</p>
    <p>B+: @countBPlus</p>
    <p>B: @countB</p>
    <p>B-: @countBMinus</p>
    <p>C+: @countCPlus</p>
    <p>C: @countC</p>
    <p>C-: @countCMinus</p>
    <p>D+: @countDPlus</p>
    <p>D: @countD</p>
    <p>D-: @countDMinus</p>
    <p>E: @countE</p>
</div>

 -->
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Grade');
        data.addColumn('number', 'Count');

        data.addRow(['A', @countA]);
        data.addRow(['A-', @countAMinus]);
        data.addRow(['B+', @countBPlus]);
        data.addRow(['B', @countB]);
        data.addRow(['B-', @countBMinus]);
        data.addRow(['C+', @countCPlus]);
        data.addRow(['C', @countC]);
        data.addRow(['C-', @countCMinus]);
        data.addRow(['D+', @countDPlus]);
        data.addRow(['D', @countD]);
        data.addRow(['D-', @countDMinus]);
        data.addRow(['E', @countE]);

        var colors = [
            '#00FF00', '#B9FF00', '#FFFF00', '#FFE800', '#FFC100', '#FFAA00', '#FF8F00', '#FF7800', '#FF5900', '#FF3E00', '#FF1F00', '#000000'
        ];

        var options = {
            slices: {
               @offsetInt: { offset: 0.2 }  
            },
            colors: colors
        };

        var chart = new google.visualization.PieChart(document.getElementById('gradePieChart'));
        chart.draw(data, options);
    }
</script>

